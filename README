Ceranubis is a distributed computing system that allows tasks to be spooled up and distributed between nodes through out the system.

Ceranubis is:
A system for remote execution of python code.

Ceranubis is not:
A distributer of python libraries

Ceranubis is built off of three base libraries. cNetwork, cCommon, cData. What I'm changing compared to previous versions of Ceranubis is the data library. Previously what I had done is the database as well as the server and client were capable of making requests over the network layer. What I'm going to do this time is just make the database layer the interface system. The databases of the nodes and server will be kept in sync, so the higher level systems can be made unaware of the lower systems. 

I'm also changing the way this works a bit. previously you would pickle a class and send that out with the code and what not. What I'm doing now instead is making it work more like OpenCL. Only a string is passed to the system to be the part executed on. This helps people conceptuatly get over the problem of not necessarily having the libraries you want to use over the network being there. You should try to have as much as possible in the string, resorting to only default libraries when you stray, or ones you garuntee will be there.


